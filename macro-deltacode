Sub GenerateFinalReport()
   Dim wbIDM As Workbook, wsIDM As Worksheet
   Dim wbLogin As Workbook, wsLogin As Worksheet
   Dim wbFinal As Workbook, wsFinal As Worksheet
   Dim lastRowIDM As Long, lastRowLogin As Long, i As Long, j As Long, newRow As Long
   ' Update with the actual file paths
   idmFilePath = "C:\Path\To\IDMFile.xlsx"
   loginFilePath = "C:\Path\To\LoginFile.xlsx"
   ' Open the IDM workbook
   Set wbIDM = Workbooks.Open(idmFilePath)
   ' Set the IDM sheet
   Set wsIDM = wbIDM.Sheets(1) ' Update with your actual sheet name or index
   ' Create a new workbook for the updated sheet
   Dim updatedWb As Workbook
   Set updatedWb = Workbooks.Add
   ' Set the updated sheet in the new workbook
   Set wsUpdatedSheet = updatedWb.Sheets(1)
   wsUpdatedSheet.Name = "UpdatedIDMSheet"
   ' Headers for the updated sheet
   wsUpdatedSheet.Cells(1, 1).Value = "RACFID"
   wsUpdatedSheet.Cells(1, 2).Value = "Name"
   wsUpdatedSheet.Cells(1, 3).Value = "Email Address"
   wsUpdatedSheet.Cells(1, 4).Value = "Updated_Option"
   ' Find the last row in the IDM sheet
   lastRowIDM = wsIDM.Cells(wsIDM.Rows.Count, "A").End(xlUp).Row ' Assuming "RACFID" is in Column A
   ' Loop through each row in the IDM sheet
   For i = 2 To lastRowIDM
       ' Replace option values (case-insensitive, ignore spaces, and special characters)
       Dim updatedOption As String
       updatedOption = ReplaceOptionValue(wsIDM.Cells(i, 21).Value)
       ' Append to the updated sheet
       newRow = wsUpdatedSheet.Cells(wsUpdatedSheet.Rows.Count, "A").End(xlUp).Row + 1
       wsUpdatedSheet.Cells(newRow, 1).Value = wsIDM.Cells(i, 1).Value ' Assuming "RACFID" is in Column A
       wsUpdatedSheet.Cells(newRow, 2).Value = wsIDM.Cells(i, 3).Value ' Assuming "Name" is in Column C
       wsUpdatedSheet.Cells(newRow, 3).Value = wsIDM.Cells(i, 4).Value ' Assuming "Email Address" is in Column D
       wsUpdatedSheet.Cells(newRow, 4).Value = updatedOption
   Next i
   ' Save the updated workbook
   updatedWb.SaveAs "C:\Path\To\UpdatedIDMSheet.xlsx" ' Update with the desired file path
   ' Open the Login workbook
   Set wbLogin = Workbooks.Open(loginFilePath)
   ' Set the Login sheet
   Set wsLogin = wbLogin.Sheets(1) ' Update with your actual sheet name or index
   ' Create a new workbook for the final report
   Dim finalWb As Workbook
   Set finalWb = Workbooks.Add
   ' Set the final report sheet in the new workbook
   Set wsFinal = finalWb.Sheets(1)
   wsFinal.Name = "FinalReport"
   ' Headers for the final report sheet
   wsFinal.Cells(1, 1).Value = "RACFID"
   wsFinal.Cells(1, 2).Value = "Name"
   wsFinal.Cells(1, 3).Value = "Email Address"
   wsFinal.Cells(1, 4).Value = "Option"
   ' Find the last row in the Login sheet
   lastRowLogin = wsLogin.Cells(wsLogin.Rows.Count, "G").End(xlUp).Row ' Assuming "Email Address" is in Column G
   ' Loop through each row in the IDM sheet
   For i = 2 To lastRowIDM
       Dim idmEmail As String
       Dim idmOption As String
       idmEmail = CleanString(UCase(wsIDM.Cells(i, 3).Value)) ' Assuming "Email Address" is in Column C
       idmOption = CleanString(UCase(wsIDM.Cells(i, 4).Value)) ' Assuming "Option" is in Column D
       ' Flag to check if the record should be appended to the final report
       Dim appendRecord As Boolean
       appendRecord = True
       ' Loop through each row in the Login sheet to find matching records
       For j = 2 To lastRowLogin
           Dim loginEmail As String
           Dim loginOption As String
           loginEmail = CleanString(UCase(wsLogin.Cells(j, 7).Value)) ' Assuming "Email Address" is in Column G
           loginOption = CleanString(UCase(wsLogin.Cells(j, 12).Value)) ' Assuming "Option" is in Column L
           ' Compare email address and option values (ignoring case sensitivity and special characters)
           If idmEmail = loginEmail And idmOption = loginOption Then
               appendRecord = False ' Matching record found, do not append
               Exit For
           End If
       Next j
       ' If no matching record found, append to the final report
       If append
